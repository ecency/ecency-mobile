// Top-level build file where you can add configuration options common to all sub-projects/modules.
import groovy.json.JsonSlurper

def getNpmVersion() {
    def inputFile = new File(projectDir.getPath() + "/../package.json")
    def packageJson = new JsonSlurper().parseText(inputFile.text)
    return packageJson["version"]
}

def getNpmVersionArray() { // major [0], minor [1], patch [2]
    def (major, minor, patch) = getNpmVersion().tokenize('.')
    return [Integer.parseInt(major), Integer.parseInt(minor), Integer.parseInt(patch)] as int[]
}

buildscript {
    ext {
        buildToolsVersion = "29.0.3"
        minSdkVersion = 21
        compileSdkVersion = 29
        targetSdkVersion = 29
        googlePlayServicesVisionVersion = "17.0.2"
        googlePlayServicesVersion = "16.+"
        firebaseVersion = "17.3.4"
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath('com.android.tools.build:gradle:4.0.1')
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'com.bugsnag:bugsnag-android-gradle-plugin:4.+'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        // react-native-image-crop-picker
        maven { url 'https://maven.google.com' }

        google()
        jcenter()
        maven { url "https://www.jitpack.io" }
    }
}

subprojects {project ->
    if (project.name.contains('react-native-fast-image')|| project.name.contains('realm')) {
            buildscript {
                repositories {
                maven { url "https://dl.bintray.com/android/android-tools/"  }
            }    
        }
    }
    ext {
        def npmVersion = getNpmVersionArray()
        versionMajor = npmVersion[0]
        versionMinor = npmVersion[1]
        versionPatch = npmVersion[2]
    }
}
